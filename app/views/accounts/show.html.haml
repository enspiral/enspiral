- account = @account

.row
  - if account.closed == false
    %h1.span5= account.name
  - else
    %h1.span5= "#{account.name} (Closed)"
  .model_actions
    - if account.closed == false
      =link_to 'Edit', {action: :edit}, class: 'btn' if @account_admin
    - if account.closed == true
      =link_to 'Reopen', {action: :reopen}, class: 'btn btn-danger', confirm: "Are you sure you want to reopen this account?", method: :post if @account_admin
.row
  .span10
    %p= account.description

%h3
  %span{class: "#{account.balance >= 0 ? "green_ink" : "red_ink" }"}
    Available:
    = " #{number_to_currency account.balance} | "
  %span.orange_ink
    Invoiced:
    =" #{number_to_currency account.pending_balance}"
#graph.graph

.tabbable
  %ul.nav.nav-tabs
    %li.active
      %a{"data-toggle" => "tab", :href => "#t5"} Funds Transfers
    - if params[:commit] == 'Filter' && !params[:to].empty? && !params[:from].empty?
      %li
        %a{"data-toggle" => "tab", :href => "#t1"} Recent Transactions
      %li
        %a{"data-toggle" => "tab", :href => "#t2"} Invoice Allocations
    - else
      %li
        %a{"data-toggle" => "tab", :href => "#t1"} Recent Transactions (#{number_to_currency account.balance})
      %li
        %a{"data-toggle" => "tab", :href => "#t2"} Invoice Allocations (#{number_to_currency account.pending_balance})
    -if @account_admin
      %li
        %a{"data-toggle" => "tab", :href => "#t4"} Transfer Funds
  .tab-content
    #t5.tab-pane.active
      .row
        .search_box.navbar-form
          =form_tag nil, style: 'margin-left:30px;', :method => "get" do
            From :
            =text_field_tag :from, @date, class: 'datepicker', style: 'width: 80px;', value: @from
            To :
            =text_field_tag :to, @date, class: 'datepicker', style: 'width: 80px;', value: @to
            =submit_tag 'Filter'
            - if params[:commit] == 'Filter'
              =submit_tag 'Reset'
            .all_tran{style: "float: right; margin-top: 15px;"}
              = link_to transactions_account_path(account) do
                Show All Transactions
                %i.icon-share-alt
      = render '/funds_transfers/table', funds_transfers: @funds_transfers, account: @account
    #t1.tab-pane
      .row
        .search_box.navbar-form
          =form_tag nil, style: 'margin-left:30px;', :method => "get" do
            From :
            =text_field_tag :from, @date, class: 'datepicker', style: 'width: 80px;', value: @from
            To :
            =text_field_tag :to, @date, class: 'datepicker', style: 'width: 80px;', value: @to
            =submit_tag 'Filter'
            - if params[:commit] == 'Filter'
              =submit_tag 'Reset'
            .all_tran{style: "float: right; margin-top: 15px;"}
              = link_to transactions_account_path(account) do
                Show All Transactions
                %i.icon-share-alt
      = render 'transactions', transactions: @transactions
    #t2.tab-pane
      .row
        .search_box.navbar-form
          =form_tag nil, style: 'margin-left:30px;', :method => "get" do
            From :
            =text_field_tag :from, @date, class: 'datepicker', style: 'width: 80px;', value: @from
            To :
            =text_field_tag :to, @date, class: 'datepicker', style: 'width: 80px;', value: @to
            =submit_tag 'Filter'
            - if params[:commit] == 'Filter'
              =submit_tag 'Reset'
            .all_tran{style: "float: right; margin-top: 15px;"}
              = link_to transactions_account_path(account) do
                Show All Transactions
                %i.icon-share-alt
      = render 'invoice_allocations', {invoice_allocations: @invoice_allocations}
    -if @account_admin
      #t4.tab-pane
        =simple_form_for(@funds_transfer, html: {:onsubmit => "return confirm('Confirm transfers of $'+document.getElementById('funds_transfer_amount').value+' from '+ document.getElementById('funds_transfer_source_account_id').options[document.getElementById('funds_transfer_source_account_id').selectedIndex].text +' to '+document.getElementById('funds_transfer_destination_account_id').options[document.getElementById('funds_transfer_destination_account_id').selectedIndex].text)" }, url: [@account.company, @funds_transfer]) do |f|
          =f.input :source_account_id, collection: @account.company.accounts.not_closed
          =f.input :destination_account_id, collection: @account.company.accounts.not_closed, input_html: { class: 'czn-select'}
          =f.input :amount
          =f.input :description, hint: 'What is the payment for?'
          =f.submit 'Create Transaction', class: 'btn'


- content_for :javascripts do
  :javascript
    $.ajax({
      url      : "#{account_balances_path(account, 30)}",
      dataType : "json",
      success  : function(data) {
        $.plot($("#graph"), [{ data: data }], {
          series: {
            color: "rgb(0, 155, 0)",
            lines: { 
              show: true,
              fill: true,
            },
            points: {
              show: true
            },
            threshold: { 
              below: 0, 
              color: "rgb(155, 0, 0)" 
            }
          },
          grid: { hoverable: true, borderWidth: 0 },
          xaxis: { 
            mode: "time", 
            timeformat: "%d-%m" 
          },
          yaxis: {
            tickFormatter: function (val, axis) { return "$" + (val/1000) + "k"; }
          }
        });
      }
    });

    function showTooltip(x, y, contents) {
      $('<div id="tooltip">' + contents + '</div>').css({
        position: 'absolute',
        display: 'none',
        top: y + 5,
        left: x + 5,
        border: '1px solid #ccc',
        padding: '2px',
        'background-color': '#fff',
        opacity: 0.80
      }).appendTo("body").fadeIn(200);
    }
 
    var previousPoint = null;

    $("#graph").bind("plothover", function(event, pos, item) {
      $("#x").text(pos.x.toFixed(2));
      $("#y").text(pos.y.toFixed(2));

      if (item) {
        if (previousPoint != item.dataIndex) {
          previousPoint = item.dataIndex;
          
          $("#tooltip").remove();
          var x = new Date(item.datapoint[0]);
          var y = item.datapoint[1];

          var formattedDate = x.getFullYear() + "-";
          
          var day = x.getDate();
          if ( day < 10 ) { formattedDate += "0"; }
          formattedDate += day;
          
          var month = x.getMonth();
          if ( day < 10 ) { formattedDate += "0"; }
          formattedDate += day;

          showTooltip(
            item.pageX, 
            item.pageY, 
            x.getFullYear() + "-" + x.getMonth() + "-" + x.getDate() + " : $" + y
          );
        }
      }
      else {
        $("#tooltip").remove();
        previousPoint = null;            
      }
    });


