- title("View Invoice")
.row
  %h1.span5.bottom_margin Invoice to #{@invoice.customer.name}
  .model_actions
    - unless @invoice.paid
      - if @invoice.allocated?
        = link_to 'Pay', pay_company_invoice_path(@company, @invoice), method: :post, class: 'btn btn-success'
      - else
        = button_to "Destroy", [@company, @invoice], :confirm => "Are you sure?", :method => :delete, class: 'btn'

.stats.bottom_margin
  %span
    %strong For: 
    #{number_to_currency(@invoice.amount)}
  %span
    %strong Created: 
    #{time_ago_in_words(@invoice.date)} ago
  %span
    %strong Due: 
    #{time_ago_in_words(@invoice.due)} from now

- if @invoice.allocations.size > 0
  %h3 Allocations
  .row
    %table.table.table-striped.invoice_allocations.span5.one_action
      - for allocation in @invoice.allocations
        %tr{:class => 'invoice_allocation'}
          -unless @invoice.paid 
            %td.actions
              =link_to company_invoice_allocation_path(@company, allocation), class: 'red_ink', :method => :delete do
                %i.icon-remove
          %td= number_to_currency(allocation.amount)
          %td= allocation.account.name


- if @invoice.unallocated > 0
  .sub_form
    %h3 Create Allocation

    = form_for [@company, @invoice_allocation] do |f|
      %p.top_margin= "#{number_to_currency(@invoice.unallocated)} is yet to be allocated."
      = f.hidden_field :invoice_id

      .row
        .controll-group.span3
          = f.label :account_id, 'Account'
          = f.select :account_id, options_for_select(Account.active.collect {|a| [a.name, a.id]}), {}, :tabindex => 1, class: 'czn-select'

        .controll-group.span3
          = f.label :amount
          = f.text_field :amount, :tabindex => 2

        .controll-group.span3
          = f.label :hours, "Hours"
          = f.text_field :hours, :tabindex => 3
          %br
          %small (If not applicable enter 0)


      = f.submit 'Allocate', :id => "invoice_allocation_submit", :tabindex => 4, class: 'btn'

-unless @invoice.payments.blank?
  %h3 Payments
  .row
    %table.table.table-striped.span5
      %thead
        %th Amount
        %th Paid on
      %tbody
        -@invoice.payments.order(:paid_on).each do |p|
          %tr
            %td=p.amount
            %td=nice_date p.paid_on

.sub_form
  %h3 Record Payment
  =simple_form_for [@company, @invoice, @payment] do |f|
    .row
      .controll-group.span3=f.input :amount
      .controll-group.span3=f.input :paid_on, as: :string, input_html: {class: 'datepicker'}
    =f.submit class: 'btn'

