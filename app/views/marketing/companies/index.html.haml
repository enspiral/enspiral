.search_and_filter.row
  %section.span3
    %h1 Companies
    .filter_search
      =label_tag :search, "Search for a company:"
      =text_field_tag :search
    %nav
      %ul
        %li.filter_header 
          Order by #{" | "} 
          .sorter.sorter-clear
            =link_to ' Clear', '#' 
        %li.sorter.sorter-name
          =link_to 'Name', '#' 
          %i.icon-arrow-up
          %i.icon-arrow-down
        %li.sorter.sorter-date
          =link_to 'Date', '#' 
          %i.icon-arrow-up
          %i.icon-arrow-down
        %li.filter_header Show:
        %li.filter.filter-all 
          =link_to 'All', '#'
        -groups = Group.all.collect{|g| g unless g.people.active.blank?}.compact
        - if groups
          - groups.each do |g|
            -safe_name = g.name.gsub(/ /,'_').downcase
            %li.filter{class: "filter-#{safe_name}"}
              =link_to g.name, '#'
        -#%li.filter_header Companies In:
        -#- cities = City.all.collect{|c| c unless c.people.active.blank?}.compact
        -#- if cities 
          -#-cities.each do |c|
            -#-safe_name = c.name.gsub(/ /,'_').downcase
            -#%li.filter{class: "filter-#{safe_name}"}
              -#=link_to c.name, '#'
        %li.filter_header Companies In:
        - countries = Company.all.collect{|co| co.country unless co.country.blank?}.uniq.compact
        - if countries 
          -countries.each do |c|
            -safe_name = c.name.gsub(/ /,'_').downcase
            %li.filter{class: "filter-#{safe_name}"}
              =link_to c.name, '#'
            

  %section.search_and_filter_container.span9
    .row
      -@companies.each_with_index do |c, i|
        -unless c.image.blank?
          -name = c.name
          -country_filter = c.country ? "filter-#{c.country.name.gsub(/ /,'_').downcase}" : ''
          .image_list_item.company.span3{class: "#{country_filter}", data: {created_at: c.created_at.to_i } }
            =link_to marketing_company_path(c), class: 'block_link' do
              %span
            .front
              .image
                - if c.image
                  =image_tag c.image.thumb('270x244').url
                - else
                  =image_tag 'defaultbust.jpg'
              %h2.text_filter{class: "#{if name.length > 30 then 'long_title' end}"}
                =name
              %p
                =c.tagline
            .back

=content_for :javascripts do
  :coffeescript
    @search_filter = new Enspiral.Views.SimpleFilterSearch(
      el: '.search_and_filter'
      targetClass: '.image_list_item'
      containerClass: '.search_and_filter_container .row'
    )
