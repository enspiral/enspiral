- account = @account
- transactions = Transaction.transactions_with_totals(account.transactions.limit(20))

%h2= account.name


#graph.graph

%h4 Recent Transactions
= link_to 'All Transactions', account_transactions_path(account)
= render :partial => '/shared/transactions', :locals => {:transactions => transactions}

%h2= "#{number_to_currency account.pending_total} invoiced"
%h4 Invoices Awaiting Payment
= render :partial => '/shared/invoice_allocations', :object => account.invoice_allocations.pending

%h3 Permissions
%p People listed here, and those people who are administrators for companies listed here, can transfer money from this account.

%h4 People
%ul
  -@account.people.each do |p|
    %li=p.name

  -if @company
    -path = company_account_accounts_people_path(@company, account)
  -else
    -path = account_accounts_people_path(account)
  %p=link_to('Manage people permissions', path)

%h4 Companies
%ul
  -@account.companies.each do |c|
    %li=c.name

  -if @company
    -path = company_account_accounts_companies_path(@company, account)
  -else
    -path = account_accounts_companies_path(account)
  %p=link_to('Manage company permissions', path)

- content_for :javascripts do
  :javascript
    $.ajax({
      url      : "#{account_balances_path(account, 10)}",
      dataType : "json",
      success  : function(data) {
        $.plot($("#graph"), [{ data: data }], {
          series: {
            color: "rgb(0, 155, 0)",
            lines: { 
              show: true,
              fill: true
            },
            threshold: { 
              below: 0, 
              color: "rgb(155, 0, 0)" 
            }
          },
          grid: { hoverable: true },
          xaxis: { 
            mode: "time", 
            timeformat: "%m/%d" 
          },
          yaxis: {
            tickFormatter: function (val, axis) { return "$" + (val/1000) + "k"; }
          }
        });
      }
    });

    function showTooltip(x, y, contents) {
      $('<div id="tooltip">' + contents + '</div>').css({
        position: 'absolute',
        display: 'none',
        top: y + 5,
        left: x + 5,
        border: '1px solid #ccc',
        padding: '2px',
        'background-color': '#fff',
        opacity: 0.80
      }).appendTo("body").fadeIn(200);
    }
 
    var previousPoint = null;

    $("#graph").bind("plothover", function(event, pos, item) {
      $("#x").text(pos.x.toFixed(2));
      $("#y").text(pos.y.toFixed(2));

      if (item) {
        if (previousPoint != item.dataIndex) {
          previousPoint = item.dataIndex;
          
          $("#tooltip").remove();
          var x = new Date(item.datapoint[0]);
          var y = item.datapoint[1];

          var formattedDate = x.getFullYear() + "-";
          
          var day = x.getDate();
          if ( day < 10 ) { formattedDate += "0"; }
          formattedDate += day;
          
          var month = x.getMonth();
          if ( day < 10 ) { formattedDate += "0"; }
          formattedDate += day;

          showTooltip(
            item.pageX, 
            item.pageY, 
            x.getFullYear() + "-" + x.getMonth() + "-" + x.getDate() + " : $" + y
          );
        }
      }
      else {
        $("#tooltip").remove();
        previousPoint = null;            
      }
    });


